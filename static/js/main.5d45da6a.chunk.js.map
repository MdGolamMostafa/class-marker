{"version":3,"sources":["component/Main/PageInit.js","component/Main/Table.js","component/Main/Records.js","component/Main/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["PageInit","recordsPerPage","totalrecords","paginate","console","log","pageNumbers","i","Math","ceil","push","className","map","number","onClick","href","Table","record","Object","keys","recordData","entries","class","scope","id","name","email","company","job","city","phone","Records","records","loading","MainPage","useState","mockData","setMockData","setLoading","currentPage","setCurrentPage","useEffect","fetch","then","response","json","data","indexOfLastPost","indexOfFirstPost","currentrecords","slice","length","pageNumber","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d45da6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageInit = ({ recordsPerPage, totalrecords, paginate }) => {\r\n    console.log(recordsPerPage);\r\n    console.log(totalrecords);\r\n    console.log(paginate);\r\n\r\n    const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalrecords / recordsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n    return (\r\n        <div >\r\n            <h1> Pages</h1>\r\n                <nav>\r\n                    <ul className=\"pagination\">\r\n                        {pageNumbers.map((number) => (\r\n                            <li key={number} className=\"page-item\">\r\n                                <a\r\n                                    onClick={() => paginate(number)}\r\n                                    href=\"!#\"\r\n                                    className=\"page-link\"\r\n                                >\r\n                                    {number}\r\n                                </a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageInit;","import React from 'react';\r\n\r\nconst Table = (record) => {\r\n    // console.log(record);\r\n    \r\n\r\n    for (let country of Object.keys(record)) {\r\n        var recordData = record[country];\r\n        // console.log( recordData);\r\n    }\r\n    \r\n    for (const [recordData] of Object.entries(record))\r\n    {\r\n        console.log(typeof recordData);\r\n    }\r\n    return (\r\n        <div className=\"text-center\">\r\n        <div>\r\n        \r\n\r\n        </div>\r\n            <div>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Company</th>\r\n                            <th scope=\"col\">job</th>\r\n                            <th scope=\"col\">city</th>\r\n                            <th scope=\"col\">phone</th>\r\n                            <th scope=\"col\">Movie</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">{recordData.id}</th>\r\n                            <td>{recordData.name}</td>\r\n                            <td>{recordData.email}</td>\r\n                            <td>{recordData.company}</td>\r\n                            <td>{recordData.job}</td>\r\n                            <td>{recordData.city}</td>\r\n                            <td>{recordData.phone}</td>\r\n                            <td>{recordData['Fav Movie']}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\nimport Table from './Table';\r\n\r\nconst Records = ({ records, loading }) => {\r\n    // console.log(records);\r\n    // console.log(loading);\r\n    if (loading) {\r\n            return <h2>Loading...</h2>;\r\n        }\r\n    return (\r\n        <div>\r\n            <h1> Record table</h1>\r\n            \r\n            <ul className=\"list-group mb-4\">\r\n                {records.map((record) => (\r\n                    <Table\r\n                        key={record.id}\r\n                        record = {record}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Records;\r\n","import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport PageInit from './PageInit';\r\nimport Records from './Records';\r\nconst MainPage = () => {\r\n    const [mockData, setMockData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [recordsPerPage] = useState(20);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        fetch(\"https://classmarker-app.herokuapp.com/mockData\")\r\n        .then((response) => response.json())\r\n        .then((data) => setMockData(data));\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    // Get current records\r\n    const indexOfLastPost = currentPage * recordsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - recordsPerPage;\r\n    const currentrecords = mockData.slice(indexOfFirstPost, indexOfLastPost);\r\n  \r\n    // Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Total Records are {mockData.length}  </h1>\r\n                <div className = \"container mt-5\">\r\n                    {/* <h1 className=\"text-primary mb-3\">Our table</h1> */}\r\n                </div>\r\n\r\n            <Records records={currentrecords} loading={loading}> </Records>\r\n                <PageInit\r\n                    recordsPerPage={recordsPerPage}\r\n                    totalrecords={mockData.length}\r\n                    paginate={paginate}\r\n                ></PageInit>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","\nimport './App.css';\nimport MainPage from './component/Main/MainPage'\n\nfunction App() {\n  return (\n    <div>\n    \n      <MainPage></MainPage>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}